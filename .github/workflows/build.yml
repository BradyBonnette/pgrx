name: build

on:
  push:
    branches:
      - master
    pull_request:
      branches:
        - master

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        version: [10, 11, 12]

    steps:
    - uses: actions/checkout@v1
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    # Ubuntu system dependencies required to build Postgres from sources
    - name: install postgres build dependencies
      run: rustup component add rustfmt && if [ "${{ matrix.os}}" == "ubuntu-latest" ] ; then sudo apt install bison flex; fi

    # create caches for each of ~/.cargo, PG 10, 11, 12
    # we hardcode these rather than using ${{ matrix.feature }} because no matter what feature we're building for
    # build.rs needs all of these
    - name: cargo cache
      uses: actions/cache@v1
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-v5
    - name: cargo build cache
      uses: actions/cache@v1
      with:
        path: target/debug
        key: ${{ runner.os }}-cargo-debug-build-v5
    - name: postgres 10 git/configure/make cache
      uses: actions/cache@v1
      with:
        path: /tmp/pg-rs-bridge-build/REL_10_STABLE
        key: ${{ runner.os }}-postgres-REL_10_STABLE-v4
    - name: postgres 11 git/configure/make cache
      uses: actions/cache@v1
      with:
        path: /tmp/pg-rs-bridge-build/REL_11_STABLE
        key: ${{ runner.os }}-postgres-REL_11_STABLE-v4
    - name: postgres 12 git/configure/make cache
      uses: actions/cache@v1
      with:
        path: /tmp/pg-rs-bridge-build/REL_12_STABLE
        key: ${{ runner.os }}-postgres-REL_12_STABLE-v4

    # test our code
    - name: install cargo pgx
      run: cd cargo-pgx && cargo install --path . --force
    - name: cargo test
      run: cargo test --all --features pg${{ matrix.version }} --no-default-features
