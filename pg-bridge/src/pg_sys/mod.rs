//
// we allow improper_ctypes just to eliminate these warnings:
//      = note: `#[warn(improper_ctypes)]` on by default
//      = note: 128-bit integers don't currently have a known stable ABI
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(dead_code)]
#![allow(non_upper_case_globals)]
#![allow(improper_ctypes)]

//
// our actual bindings modules -- these are generated by build.rs
//

mod pg10_bindings;
mod pg11_bindings;
mod pg12_bindings;

//
// publicly expose the contents of our version modules
// these are hidden behind feature gates because we can
// only expose one of these behind "pg_sys" at a time
//

#[cfg(feature = "pg10")]
pub use v10::*;

#[cfg(feature = "pg11")]
pub use v11::*;

#[cfg(feature = "pg12")]
pub use v12::*;

// version modules
// These exist to allow us to add additional items to the various version namespaces
// that couldn't be auto-generated by bindgen

/// item declarations we want to add to all versions
mod all_versions {
    /// this comes from `postgres_ext.h`
    pub const InvalidOid: super::Oid = 0;
}

#[cfg(feature = "pg10")]
pub mod v10 {
    pub use super::all_versions::*;
    pub use super::pg10_bindings::*;
}

#[cfg(feature = "pg11")]
pub mod v11 {
    pub use super::all_versions::*;
    pub use super::pg11_bindings::*;
}

#[cfg(feature = "pg12")]
pub mod v12 {
    pub use super::all_versions::*;
    pub use super::pg12_bindings::*;
}
